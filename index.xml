<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>mikeLing</title>
        <link>https://mikeLing-qx.github.io/</link>
        <description>Recent content on mikeLing</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>LexqinMike</copyright>
        <lastBuildDate>Tue, 31 Dec 2024 17:01:24 +0800</lastBuildDate><atom:link href="https://mikeLing-qx.github.io/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Image Test</title>
        <link>https://mikeLing-qx.github.io/p/image-test/</link>
        <pubDate>Tue, 31 Dec 2024 17:01:24 +0800</pubDate>
        
        <guid>https://mikeLing-qx.github.io/p/image-test/</guid>
        <description>&lt;h1 id=&#34;1-wsl安装k3s&#34;&gt;1. wsl安装k3s
&lt;/h1&gt;&lt;p&gt;遇到问题&lt;/p&gt;
&lt;h1 id=&#34;7-service&#34;&gt;7. service
&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Kubernetes service 定义了这样一种抽象：一个 Pod 的逻辑分组，一种可以访问它们的策略 ——&lt;/p&gt;
&lt;p&gt;通常称为微服务。这一组 pod 能够被 Service 访问到，通常是通过 Label selector&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Service 资源基于标签选择器将一组 Pod 定义成一个逻辑组合，并通过自己的 IP 地址和端口调度代理请求至组内的 Pod 对象之上，如下图所示，它向客户端隐藏了真实的、处理用户请求的 Pod 资源， 使得客户端的请求看上去就像是由 Service 直接处理并响应一样。 service 的 ip 也被称作为 cluster-ip&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mikeLing-qx.github.io/p/image-test/images/image-20240805122647839.png&#34;
	width=&#34;781&#34;
	height=&#34;242&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240805122647839&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;322&#34;
		data-flex-basis=&#34;774px&#34;
	
&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://mikeLing-qx.github.io/p/image-test/images/image-20240805123055409.png&#34;
	width=&#34;871&#34;
	height=&#34;595&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240805123055409&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;146&#34;
		data-flex-basis=&#34;351px&#34;
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Spring</title>
        <link>https://mikeLing-qx.github.io/p/spring/</link>
        <pubDate>Tue, 31 Dec 2024 16:42:10 +0800</pubDate>
        
        <guid>https://mikeLing-qx.github.io/p/spring/</guid>
        <description>&lt;h2 id=&#34;spring相关教程资料&#34;&gt;Spring相关教程/资料
&lt;/h2&gt;&lt;h3 id=&#34;官网相关&#34;&gt;官网相关
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://spring.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Spring官网&lt;/a&gt;、&lt;a class=&#34;link&#34; href=&#34;https://spring.io/projects&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Spring系列主要项目&lt;/a&gt;、&lt;a class=&#34;link&#34; href=&#34;https://spring.io/guides&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Spring官网指南&lt;/a&gt;、&lt;a class=&#34;link&#34; href=&#34;https://spring.io/docs/reference&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官方文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.spring.io/spring/docs/5.0.14.RELEASE/spring-framework-reference/index.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;spring-framework-reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.spring.io/spring/docs/4.3.17.RELEASE/javadoc-api/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Spring Framework 4.3.17.RELEASE API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;系统学习教程&#34;&gt;系统学习教程
&lt;/h2&gt;&lt;h3 id=&#34;文档&#34;&gt;文档
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://wiki.jikexueyuan.com/project/spring/transaction-management.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;极客学院Spring Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.w3cschool.cn/wkspring/f6pk1ic8.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Spring W3Cschool教程 &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;视频&#34;&gt;视频
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://study.163.com/course/courseMain.htm?courseId=1004475015#/courseDetail?tab=1&amp;amp;35&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;网易云课堂——58集精通java教程Spring框架开发&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.imooc.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;慕课网相关视频&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;黑马视频和尚硅谷视频（非常推荐）：&lt;/strong&gt; 微信公众号：“&lt;strong&gt;JavaGuide&lt;/strong&gt;”后台回复关键字 “&lt;strong&gt;1&lt;/strong&gt;” 免费领取。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;面试必备知识点&#34;&gt;面试必备知识点
&lt;/h2&gt;&lt;h3 id=&#34;springaopioc实现原理&#34;&gt;SpringAOP,IOC实现原理
&lt;/h3&gt;&lt;p&gt;AOP实现原理、动态代理和静态代理、Spring IOC的初始化过程、IOC原理、自己实现怎么实现一个IOC容器？这些东西都是经常会被问到的。&lt;/p&gt;
&lt;p&gt;推荐阅读：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.coolblog.xyz/2018/01/18/%e8%87%aa%e5%b7%b1%e5%8a%a8%e6%89%8b%e5%ae%9e%e7%8e%b0%e7%9a%84-Spring-IOC-%e5%92%8c-AOP-%e4%b8%8a%e7%af%87/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;自己动手实现的 Spring IOC 和 AOP - 上篇&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.coolblog.xyz/2018/01/18/%e8%87%aa%e5%b7%b1%e5%8a%a8%e6%89%8b%e5%ae%9e%e7%8e%b0%e7%9a%84-Spring-IOC-%e5%92%8c-AOP-%e4%b8%8b%e7%af%87/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;自己动手实现的 Spring IOC 和 AOP - 下篇&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;aop&#34;&gt;AOP
&lt;/h3&gt;&lt;p&gt;AOP思想的实现一般都是基于 &lt;strong&gt;代理模式&lt;/strong&gt; ，在JAVA中一般采用JDK动态代理模式，但是我们都知道，&lt;strong&gt;JDK动态代理模式只能代理接口而不能代理类&lt;/strong&gt;。因此，Spring AOP 会这样子来进行切换，因为Spring AOP 同时支持 CGLIB、ASPECTJ、JDK动态代理。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果目标对象的实现类实现了接口，Spring AOP 将会采用 JDK 动态代理来生成 AOP 代理类；&lt;/li&gt;
&lt;li&gt;如果目标对象的实现类没有实现接口，Spring AOP 将会采用 CGLIB 来生成 AOP 代理类——不过这个选择过程对开发者完全透明、开发者也无需关心。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;推荐阅读：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.cnblogs.com/puyangsky/p/6218925.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;静态代理、JDK动态代理、CGLIB动态代理讲解&lt;/a&gt; ：我们知道AOP思想的实现一般都是基于 &lt;strong&gt;代理模式&lt;/strong&gt; ，所以在看下面的文章之前建议先了解一下静态代理以及JDK动态代理、CGLIB动态代理的实现方式。&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://juejin.im/post/5aa7818af265da23844040c6&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Spring AOP 入门&lt;/a&gt; ：带你入门的一篇文章。这篇文章主要介绍了AOP中的基本概念：5种类型的通知（Before，After，After-returning，After-throwing，Around）；Spring中对AOP的支持：AOP思想的实现一般都是基于代理模式，在Java中一般采用JDK动态代理模式，Spring AOP 同时支持 CGLIB、ASPECTJ、JDK动态代理，&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://juejin.im/post/5a55af9e518825734d14813f&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Spring AOP 基于AspectJ注解如何实现AOP&lt;/a&gt; ： &lt;strong&gt;AspectJ是一个AOP框架，它能够对java代码进行AOP编译（一般在编译期进行），让java代码具有AspectJ的AOP功能（当然需要特殊的编译器）&lt;/strong&gt;，可以这样说AspectJ是目前实现AOP框架中最成熟，功能最丰富的语言，更幸运的是，AspectJ与java程序完全兼容，几乎是无缝关联，因此对于有java编程基础的工程师，上手和使用都非常容易。Spring注意到AspectJ在AOP的实现方式上依赖于特殊编译器(ajc编译器)，因此Spring很机智回避了这点，转向采用动态代理技术的实现原理来构建Spring AOP的内部机制（动态织入），这是与AspectJ（静态织入）最根本的区别。&lt;strong&gt;Spring 只是使用了与 AspectJ 5 一样的注解，但仍然没有使用 AspectJ 的编译器，底层依是动态代理技术的实现，因此并不依赖于 AspectJ 的编译器&lt;/strong&gt;。 Spring AOP虽然是使用了那一套注解，其实实现AOP的底层是使用了动态代理(JDK或者CGLib)来动态植入。至于AspectJ的静态植入，不是本文重点，所以只提一提。&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.imooc.com/learn/869&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;探秘Spring AOP（慕课网视频，很不错）&lt;/a&gt;:慕课网视频，讲解的很不错，详细且深入&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/fighterandknight/article/details/51209822&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;spring源码剖析（六）AOP实现原理剖析&lt;/a&gt; :通过源码分析Spring AOP的原理&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;ioc&#34;&gt;IOC
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/wang-meng/p/5597490.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;[Spring框架]Spring IOC的原理及详解。&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://yikun.github.io/2015/05/29/Spring-IOC%e6%a0%b8%e5%bf%83%e6%ba%90%e7%a0%81%e5%ad%a6%e4%b9%a0/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Spring IOC核心源码学习&lt;/a&gt; :比较简短，推荐阅读。&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://javadoop.com/post/spring-ioc&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Spring IOC 容器源码分析&lt;/a&gt; :强烈推荐，内容详尽，而且便于阅读。&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.qzztf.com/2019/08/21/Bean%E5%88%9D%E5%A7%8B%E5%8C%96/#Bean-%E5%AE%9E%E4%BE%8B%E5%8C%96&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Bean初始化过程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;spring事务管理&#34;&gt;Spring事务管理
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://juejin.im/post/5b00c52ef265da0b95276091&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;可能是最漂亮的Spring事务管理详解&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://juejin.im/post/5b010f27518825426539ba38&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Spring编程式和声明式事务实例讲解&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;spring单例与线程安全&#34;&gt;Spring单例与线程安全
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.cnblogs.com/chengxuyuanzhilu/p/6404991.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Spring框架中的单例模式（源码解读）&lt;/a&gt;:单例模式是一种常用的软件设计模式。通过单例模式可以保证系统中一个类只有一个实例。spring依赖注入时，使用了 多重判断加锁 的单例模式。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;spring源码阅读&#34;&gt;Spring源码阅读
&lt;/h3&gt;&lt;p&gt;阅读源码不仅可以加深我们对Spring设计思想的理解，提高自己的编码水平，还可以让自己在面试中如鱼得水。下面的是Github上的一个开源的Spring源码阅读，大家有时间可以看一下，当然你如果有时间也可以自己慢慢研究源码。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/seaswalker/Spring/blob/master/note/Spring.md&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;spring-core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/seaswalker/Spring/blob/master/note/spring-aop.md&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;spring-aop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/seaswalker/Spring/blob/master/note/spring-context.md&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;spring-context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/seaswalker/Spring/blob/master/note/spring-task.md&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;spring-task&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/seaswalker/Spring/blob/master/note/spring-transaction.md&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;spring-transaction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/seaswalker/Spring/blob/master/note/spring-mvc.md&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;spring-mvc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/seaswalker/Spring/blob/master/note/guava-cache.md&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;guava-cache&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Archives</title>
        <link>https://mikeLing-qx.github.io/archives/</link>
        <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
        
        <guid>https://mikeLing-qx.github.io/archives/</guid>
        <description></description>
        </item>
        <item>
        <title>Links</title>
        <link>https://mikeLing-qx.github.io/links/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://mikeLing-qx.github.io/links/</guid>
        <description>&lt;p&gt;To use this feature, add &lt;code&gt;links&lt;/code&gt; section to frontmatter.&lt;/p&gt;
&lt;p&gt;This page&amp;rsquo;s frontmatter:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;links&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;GitHub&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;description&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;GitHub is the world&amp;#39;s largest software development platform.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;website&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;https://github.com&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;TypeScript&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;description&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;TypeScript is a typed superset of JavaScript that compiles to plain JavaScript.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;website&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;https://www.typescriptlang.org&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ts-logo-128.jpg&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;image&lt;/code&gt; field accepts both local and external images.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Search</title>
        <link>https://mikeLing-qx.github.io/search/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://mikeLing-qx.github.io/search/</guid>
        <description></description>
        </item>
        <item>
        <title>关于</title>
        <link>https://mikeLing-qx.github.io/%E5%85%B3%E4%BA%8E/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://mikeLing-qx.github.io/%E5%85%B3%E4%BA%8E/</guid>
        <description>&lt;p&gt;This is a test page for i18n support.&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
